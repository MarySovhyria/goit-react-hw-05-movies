{"version":3,"file":"static/js/711.3059bbc1.chunk.js","mappings":"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","sources":["components/SpecificMovie/SpecificMovie.styled.jsx","components/SpecificMovie/SpecificMovie.jsx","components/service/API.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const Container = styled.div`\n    margin-top: 20px;\n    margin-right: 20px;\n    display: flex;\n    flex-direction: row;\n    gap: 30px;\n    background-color: #bed6c5;\n`\n\nexport const Title = styled.h1`\n    color: red;\n`\n\nexport const Image = styled.img`\n    width: 300px;\n    height: 400px;\n`\nexport const AdditionalInf = styled.div`\n    background-color: #80b9ba;\n    margin-right: 20px;\n`","import React, { useState, useEffect, useRef } from 'react';\nimport { Link, Outlet, useParams, useLocation} from 'react-router-dom';\nimport { fetchMovieDetails } from 'components/service/API';\nimport { Title, Image, Container, AdditionalInf } from './SpecificMovie.styled';\n\n\n\nconst SpecificMovie = () => {\n  const { movieID } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from || '/');\n\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const movie = await fetchMovieDetails(movieID);\n        setMovieDetails(movie);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovie();\n  }, [movieID]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const roundedPopularity = Math.round(movieDetails.vote_average * 10);\n  const genres = movieDetails.genres.map(genre => (\n    <span key={genre.id}>{genre.name}</span>\n  ));\n\n  return (\n    <div>\n         <Link to={backLinkHref.current}>\n        <button>⬅️ Go back</button>\n      </Link>\n      <Container>\n        <div> \n          <Image\n            src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n            alt={movieDetails.title}\n          />\n        </div>\n        <div>\n          <Title>{movieDetails.title}</Title>\n          <p>User score: {roundedPopularity}%</p>\n      \n          <h3>Overview</h3>\n          <p>{movieDetails.overview}</p>\n          <h3>Genres</h3>\n          <div>{genres}\n        </div>\n    </div>\n      </Container>\n     \n    <AdditionalInf>\n      <h3>Additional information</h3>\n              <ul>\n                  <li><Link to=\"cast\">Cast</Link></li>\n                  <li> <Link to=\"reviews\">Reviews</Link></li>\n              </ul>\n    </AdditionalInf>\n    \n     \n      <Outlet />\n\n    </div>\n  );\n};\n\nexport default SpecificMovie; ","import axios from 'axios';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '1de0ae613c35227dc100c75fb91abb21';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\n\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\n\nexport const HandleMovieSearch = async (movieName) => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n}\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieID => {\n  const response = await axios.get(`/movie/${movieID}/reviews?`, params);\n  return response.data.results;\n}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Image","_templateObject3","AdditionalInf","_templateObject4","_location$state","movieID","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie","_context","prev","next","fetchMovieDetails","sent","t0","console","error","stop","apply","arguments","_jsx","children","roundedPopularity","Math","round","vote_average","genres","map","genre","name","id","_jsxs","Link","to","current","src","concat","poster_path","alt","title","overview","Outlet","axios","params","api_key","language","fetchTrendingMovies","response","abrupt","data","results","_ref2","_callee2","movieId","_context2","_x","HandleMovieSearch","_ref3","_callee3","movieName","_context3","_x2","fetchMovieCast","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}